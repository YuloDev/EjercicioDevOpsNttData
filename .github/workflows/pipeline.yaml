name: Prueba t√©cnica NttData

on:
  push:
    branches: [ master ]
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
          terraform_version: "1.3.0"     

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan -var "access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var "region=${{ secrets.AWS_REGION }}"

    - name: Terraform Apply
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      working-directory: terraform
      run: terraform apply -auto-approve -var "access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var "region=${{ secrets.AWS_REGION }}"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-session-name: awssession
        role-to-assume: ${{secrets.AWS_IAM_ROLE}}
        aws-region: ${{secrets.AWS_REGION}}
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker Image
      working-directory: app
      run: |
        docker build -t nodejs-app .
        
    - name: Tag Docker Image
      working-directory: app
      run: |
        docker tag nodejs-app:latest ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/prueba-repository:latest

    - name: Push Docker Image to ECR
      working-directory: app
      run: |
        docker push ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/prueba-repository:latest      